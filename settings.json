{
  "statusLine": {
    "type": "command",
    "command": "python3 .claude/scripts/context-monitor.py"
  },
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(npm run build)",
      "Bash(npm run dev)",
      "Bash(yarn lint)",
      "Bash(yarn test:*)",
      "Bash(yarn build)",
      "Bash(git status)",
      "Bash(git diff)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull)",
      "Bash(git fetch:*)",
      "Bash(git reset:*)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(tree:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(xargs:*)",
      "Read(~/.zshrc)",
      "Read(~/.bashrc)",
      "Read(~/.gitconfig)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_file_upload",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_navigate_back",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_drag",
      "mcp__playwright__browser_hover",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_tabs",
      "mcp__playwright__browser_wait_for"
    ],
    "deny": [
      "Read(.env)",
      "Read(**/.env*)",
      "Read(**/.secret*)",
      "Read(**/env*)",
      "Read(**/*.pem)",
      "Read(**/*.key)",
      "Read(**/*.crt)",
      "Read(**/*.cert)",
      "Read(**/secrets/**)",
      "Read(**/credentials/**)",
      "Read(**/.ssh/**)",
      "Read(**/.aws/**)",
      "Read(**/.gcp/**)",
      "Read(**/node_modules/**)",
      "Read(**/dist/**)",
      "Read(**/build/**)",
      "Read(**/.git/config)",
      "Read(**/package-lock.json)",
      "Read(**/yarn.lock)",
      "Read(**/*.log)",
      "Read(**/logs/**)",
      "Read(**/temp/**)",
      "Read(**/tmp/**)",
      "Read(**/.cache/**)",
      "Read(**/coverage/**)",
      "Read(**/*.backup)",
      "Read(**/*.bak)",
      "Read(**/*.db)",
      "Read(**/*.sqlite)",
      "Read(**/*.sqlite3)",
      "Read(**/*.p12)",
      "Read(**/target/**)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(ftp:*)",
      "Bash(rsync:*)",
      "Bash(rm -rf:*)",
      "Bash(sudo:*)"
    ]
  },
  "model": "opusplan",
  "hooks": {
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python -c \"import os; exec(open(os.path.expanduser('~/.claude/scripts/hooks/log-prompt.py')).read())\""
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python -c \"import os; exec(open(os.path.expanduser('~/.claude/scripts/hooks/notify.py')).read())\""
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "WebSearch",
        "hooks": [
          {
            "type": "command",
            "command": "python -c \"import os; exec(open(os.path.expanduser('~/.claude/scripts/hooks/update-search-year.py')).read())\""
          }
        ]
      }
    ]
  }
}
